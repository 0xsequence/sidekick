### =====[ Required Configuration ]=====

### Go to https://sequence.build, login or signup, create a project, go to "Embedded Wallet" and copy your own "Project Access Key"
SEQUENCE_PROJECT_ACCESS_KEY=""  

# =====[ Optional Configuration ]=====

### By default, the signer type is "local", which requires an EVM private key to be set. This will be your backend wallet.
### If this is not provided, a random dev private key is generated and will be put into a dev.key file in the root of the project.
### Note that Sidekick creates a Sequence Smart Account Wallet for this private key and the backend wallet itself is
### a Sequence Smart Account Wallet, not an EOA.
EVM_PRIVATE_KEY="0x" 

### By default we use these values if none is provided in .env
# PORT=7500
# HOST=0.0.0.0
# REDIS_HOST=localhost
# REDIS_PORT=6379

### You can opt to use a database or not but some routes won't be available if you don't have a database.
# DATABASE_URL="postgres://postgres:postgres@localhost:5432/sidekick" 

### Set your own secret key for Sidekick, use it when making requests to the API.
### If some bad actor gets access to your API internally, they will still have to know this secret key to write to the API.
# SIDEKICK_API_SECRET_KEY="secret"

# REDIS_PASSWORD=""

### We recommend setting these two variables, it will enable automatic contract verification on deployment through Sidekick.
# ETHERSCAN_API_KEY=
# VERIFY_CONTRACT_ON_DEPLOY=

# DEBUG="true" 

### If using local signer (EVM private key)
### Note: This is enabled by default
# SIGNER_TYPE=local=
# EVM_PRIVATE_KEY= 

### If using Google KMS
# SIGNER_TYPE=google_kms
# PROJECT=
# LOCATION=
# KEY_RING=
# CRYPTO_KEY=
# CRYPTO_KEY_VERSION=

### If using AWS KMS
# SIGNER_TYPE=aws_kms 
# AWS_REGION=
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=
# AWS_KMS_KEY_ID=